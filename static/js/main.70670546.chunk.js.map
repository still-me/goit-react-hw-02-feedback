{"version":3,"sources":["components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","className","FeedbackOptions","options","onLeaveFeedback","map","option","type","onClick","shortid","generate","protoTypes","PropTypes","array","isRequired","func","Section","title","children","Notification","message","App","state","leaveFeedback","feedback","setState","countTotalFeedback","feedbacks","reduce","countPositiveFeedbackPercentage","totalFeedback","Math","round","this","Object","keys","positiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6VAiCeA,EA5BI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,qCACE,oBAAGC,UAAU,qBAAb,mBACQ,sBAAMA,UAAU,SAAhB,SAA0BL,OAElC,oBAAGK,UAAU,qBAAb,sBACW,sBAAMA,UAAU,SAAhB,SAA0BJ,OAErC,oBAAGI,UAAU,qBAAb,kBACO,sBAAMA,UAAU,SAAhB,SAA0BH,OAEjC,oBAAGG,UAAU,qBAAb,oBACS,sBAAMA,UAAU,SAAhB,SAA0BF,OAEnC,oBAAGE,UAAU,qBAAb,gCACqB,sBAAMA,UAAU,SAAhB,SAA0BD,IAD/C,Y,gCCbEE,G,MAAkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtBD,EAAQE,KAAI,SAACC,GAAD,OACV,wBACEL,UAAU,iBAEVM,KAAK,SACLC,QAASJ,EAAgBE,GAJ3B,SAMGA,GAJIG,IAAQC,iBAQnBR,EAAgBS,WAAa,CAC3BR,QAASS,IAAUC,MAAMC,WACzBV,gBAAiBQ,IAAUG,KAAKD,YAGnBZ,QCPAc,G,MAXC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,oCACE,oBAAIjB,UAAU,iBAAd,SAAgCgB,IAC/BC,OCKUC,G,MARM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,oBAAGnB,UAAU,eAAb,UAA6BmB,EAA7B,qBCsDaC,E,4MApDbC,MAAQ,CACN1B,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPyB,cAAgB,SAACC,GAAD,OAAc,kBAC5B,EAAKC,SAAL,eAAiBD,EAAW,EAAKF,MAAME,GAAY,M,EAErDE,mBAAqB,SAACC,GAAD,OACnBA,EAAUC,QAAO,SAAC7B,EAAOyB,GAAR,OAAqBzB,EAAQ,EAAKuB,MAAME,KAAW,I,EAEtEK,gCAAkC,SAACC,GACjC,OAAyB,IAAlBA,EACHA,EACAC,KAAKC,MAAyB,IAAlB,EAAKV,MAAM1B,KAAckC,I,4CAG3C,WACE,MAA+BG,KAAKX,MAA5B1B,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjB6B,EAAYO,OAAOC,KAAKF,KAAKX,OAC7BQ,EAAgBG,KAAKP,mBAAmBC,GACxCS,EACJH,KAAKJ,gCAAgCC,GAEvC,OACE,gCACE,cAAC,EAAD,CAASb,MAAM,wBAAf,SACE,cAAC,EAAD,CACEd,QAASwB,EACTvB,gBAAiB6B,KAAKV,kBAI1B,cAAC,EAAD,CAASN,MAAM,aAAf,SACqB,IAAlBa,EACC,cAAC,EAAD,CAAcV,QAAQ,sBAEtB,cAAC,EAAD,CACExB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO+B,EACP9B,mBAAoBoC,a,GA5ChBC,a,MCAlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.70670546.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./Statistics.scss\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <>\n    <p className=\"statistics__option\">\n      Good: <span className=\"option\">{good}</span>\n    </p>\n    <p className=\"statistics__option\">\n      Neutral: <span className=\"option\">{neutral}</span>\n    </p>\n    <p className=\"statistics__option\">\n      Bad: <span className=\"option\">{bad}</span>\n    </p>\n    <p className=\"statistics__option\">\n      Total: <span className=\"option\">{total}</span>\n    </p>\n    <p className=\"statistics__option\">\n      Positive feedback: <span className=\"option\">{positivePercentage}</span> %\n    </p>\n  </>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from \"react\";\nimport shortid from \"shortid\";\nimport PropTypes from \"prop-types\";\n\nimport \"./FeedbackOptions.scss\";\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) =>\n  options.map((option) => (\n    <button\n      className=\"option__button\"\n      key={shortid.generate()}\n      type=\"button\"\n      onClick={onLeaveFeedback(option)}\n    >\n      {option}\n    </button>\n  ));\n\nFeedbackOptions.protoTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./Section.scss\";\n\nconst Section = ({ title, children }) => (\n  <section>\n    <h2 className=\"section__title\">{title}</h2>\n    {children}\n  </section>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Section;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./Notification.scss\";\n\nconst Notification = ({ message }) => (\n  <p className=\"notification\">{message} ðŸ™…</p>\n);\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { Component } from \"react\";\n\nimport Statistics from \"./components/Statistics\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport Section from \"./components/Section\";\nimport Notification from \"./components/Notification\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  leaveFeedback = (feedback) => () =>\n    this.setState({ [feedback]: this.state[feedback] + 1 });\n\n  countTotalFeedback = (feedbacks) =>\n    feedbacks.reduce((total, feedback) => total + this.state[feedback], 0);\n\n  countPositiveFeedbackPercentage = (totalFeedback) => {\n    return totalFeedback === 0\n      ? totalFeedback\n      : Math.round((this.state.good * 100) / totalFeedback);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const feedbacks = Object.keys(this.state);\n    const totalFeedback = this.countTotalFeedback(feedbacks);\n    const positiveFeedbackPercentage =\n      this.countPositiveFeedbackPercentage(totalFeedback);\n\n    return (\n      <div>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={feedbacks}\n            onLeaveFeedback={this.leaveFeedback}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {totalFeedback === 0 ? (\n            <Notification message=\"No feedback given\" />\n          ) : (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={totalFeedback}\n              positivePercentage={positiveFeedbackPercentage}\n            />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize/modern-normalize.css\";\n\nimport App from \"./App\";\nimport \"./styles/base.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}